maleGammaTS_3 <- read_csv("../Figures/maleGammaTS_3.csv",
col_types = cols(...1 = col_skip()))
femaleGammaTS_1 <- read_csv("../Figures/femaleGammaTS_1.csv",
col_types = cols(...1 = col_skip()))
femaleGammaTS_2 <- read_csv("../Figures/femaleGammaTS_2.csv",
col_types = cols(...1 = col_skip()))
femaleGammaTS_3 <- read_csv("../Figures/femaleGammaTS_3.csv",
col_types = cols(...1 = col_skip()))
# since we used a 250 ms time window but marked with the start of it, we correct the time stamps to be the center of the window
maleGammaTS_1$Time <- maleGammaTS_1$Time + 0.125
maleGammaTS_2$Time <- maleGammaTS_2$Time + 0.125
maleGammaTS_3$Time <- maleGammaTS_3$Time + 0.125
femaleGammaTS_1$Time <- femaleGammaTS_1$Time + 0.125
femaleGammaTS_2$Time <- femaleGammaTS_2$Time + 0.125
femaleGammaTS_3$Time <- femaleGammaTS_3$Time + 0.125
ggplot() +
geom_line(data = femaleGammaTS_1, aes(x = Time, y = Gamma), color = "#FA7DEB", linewidth = 1) +
geom_line(data = femaleGammaTS_2, aes(x = Time, y = Gamma), color = "#CE7DA5", linewidth = 1) +
geom_line(data = femaleGammaTS_3, aes(x = Time, y = Gamma), color = "#563440", linewidth = 1) +
geom_vline(xintercept = 0, linetype="dashed") +
geom_hline(yintercept = 0, linetype="solid") +
scale_x_continuous(name = "Time (s)", limits = c(-0.2, 1), breaks = seq(-0.2, 1, 0.1)) +
ylab("Gamma Power (dB, relative to Baseline)") +
ggtitle("Female")
ggplot() +
geom_line(data = maleGammaTS_1, aes(x = Time, y = Gamma), color = "#2DE1FC", linewidth = 1) +
geom_line(data = maleGammaTS_2, aes(x = Time, y = Gamma), color = "#2274A5", linewidth = 1) +
geom_line(data = maleGammaTS_3, aes(x = Time, y = Gamma), color = "#090C9B", linewidth = 1) +
geom_vline(xintercept = 0, linetype="dashed") +
geom_hline(yintercept = 0, linetype="solid") +
scale_x_continuous(name = "Time (s)", limits = c(-0.2, 1), breaks = seq(-0.2, 1, 0.1)) +
ylab("") +  # hide the y label, since it's already next to another chart
ggtitle("Male")
maleGammaTS_1 <- read_csv("../Figures/maleGammaTS_1.csv",
col_types = cols(...1 = col_skip()))
maleGammaTS_2 <- read_csv("../Figures/maleGammaTS_2.csv",
col_types = cols(...1 = col_skip()))
maleGammaTS_3 <- read_csv("../Figures/maleGammaTS_3.csv",
col_types = cols(...1 = col_skip()))
femaleGammaTS_1 <- read_csv("../Figures/femaleGammaTS_1.csv",
col_types = cols(...1 = col_skip()))
femaleGammaTS_2 <- read_csv("../Figures/femaleGammaTS_2.csv",
col_types = cols(...1 = col_skip()))
femaleGammaTS_3 <- read_csv("../Figures/femaleGammaTS_3.csv",
col_types = cols(...1 = col_skip()))
# since we used a 250 ms time window but marked with the start of it, we correct the time stamps to be the center of the window
maleGammaTS_1$Time <- maleGammaTS_1$Time + 0.125
maleGammaTS_2$Time <- maleGammaTS_2$Time + 0.125
maleGammaTS_3$Time <- maleGammaTS_3$Time + 0.125
femaleGammaTS_1$Time <- femaleGammaTS_1$Time + 0.125
femaleGammaTS_2$Time <- femaleGammaTS_2$Time + 0.125
femaleGammaTS_3$Time <- femaleGammaTS_3$Time + 0.125
ggplot(femaleGammaTS_1, aes(x = Time, y = Gamma, color = "#FA7DEB", linewidth = 1)) +
#geom_line(data = femaleGammaTS_1, aes(x = Time, y = Gamma), color = "#FA7DEB", linewidth = 1) +
geom_line(data = femaleGammaTS_2, aes(x = Time, y = Gamma), color = "#CE7DA5", linewidth = 1) +
geom_line(data = femaleGammaTS_3, aes(x = Time, y = Gamma), color = "#563440", linewidth = 1) +
geom_vline(xintercept = 0, linetype="dashed") +
geom_hline(yintercept = 0, linetype="solid") +
scale_x_continuous(name = "Time (s)", limits = c(-0.2, 1), breaks = seq(-0.2, 1, 0.1)) +
ylab("Gamma Power (dB, relative to Baseline)") +
ggtitle("Female")
ggplot() +
geom_line(data = maleGammaTS_1, aes(x = Time, y = Gamma), color = "#2DE1FC", linewidth = 1) +
geom_line(data = maleGammaTS_2, aes(x = Time, y = Gamma), color = "#2274A5", linewidth = 1) +
geom_line(data = maleGammaTS_3, aes(x = Time, y = Gamma), color = "#090C9B", linewidth = 1) +
geom_vline(xintercept = 0, linetype="dashed") +
geom_hline(yintercept = 0, linetype="solid") +
scale_x_continuous(name = "Time (s)", limits = c(-0.2, 1), breaks = seq(-0.2, 1, 0.1)) +
ylab("") +  # hide the y label, since it's already next to another chart
ggtitle("Male")
maleGammaTS_1 <- read_csv("../Figures/maleGammaTS_1.csv",
col_types = cols(...1 = col_skip()))
maleGammaTS_2 <- read_csv("../Figures/maleGammaTS_2.csv",
col_types = cols(...1 = col_skip()))
maleGammaTS_3 <- read_csv("../Figures/maleGammaTS_3.csv",
col_types = cols(...1 = col_skip()))
femaleGammaTS_1 <- read_csv("../Figures/femaleGammaTS_1.csv",
col_types = cols(...1 = col_skip()))
femaleGammaTS_2 <- read_csv("../Figures/femaleGammaTS_2.csv",
col_types = cols(...1 = col_skip()))
femaleGammaTS_3 <- read_csv("../Figures/femaleGammaTS_3.csv",
col_types = cols(...1 = col_skip()))
# since we used a 250 ms time window but marked with the start of it, we correct the time stamps to be the center of the window
maleGammaTS_1$Time <- maleGammaTS_1$Time + 0.125
maleGammaTS_2$Time <- maleGammaTS_2$Time + 0.125
maleGammaTS_3$Time <- maleGammaTS_3$Time + 0.125
femaleGammaTS_1$Time <- femaleGammaTS_1$Time + 0.125
femaleGammaTS_2$Time <- femaleGammaTS_2$Time + 0.125
femaleGammaTS_3$Time <- femaleGammaTS_3$Time + 0.125
ggplot() +
geom_line(data = femaleGammaTS_1, aes(x = Time, y = Gamma), color = "#FA7DEB", linewidth = 1) +
geom_line(data = femaleGammaTS_2, aes(x = Time, y = Gamma), color = "#CE7DA5", linewidth = 1) +
geom_line(data = femaleGammaTS_3, aes(x = Time, y = Gamma), color = "#563440", linewidth = 1) +
geom_vline(xintercept = 0, linetype="dashed") +
geom_hline(yintercept = 0, linetype="solid") +
scale_x_continuous(name = "Time (s)", limits = c(-0.2, 1), breaks = seq(-0.2, 1, 0.1)) +
ylab("Gamma Power (dB, relative to Baseline)") +
ggtitle("Female")
ggplot() +
geom_line(data = maleGammaTS_1, aes(x = Time, y = Gamma), color = "#2DE1FC", linewidth = 1) +
geom_line(data = maleGammaTS_2, aes(x = Time, y = Gamma), color = "#2274A5", linewidth = 1) +
geom_line(data = maleGammaTS_3, aes(x = Time, y = Gamma), color = "#090C9B", linewidth = 1) +
geom_vline(xintercept = 0, linetype="dashed") +
geom_hline(yintercept = 0, linetype="solid") +
scale_x_continuous(name = "Time (s)", limits = c(-0.2, 1), breaks = seq(-0.2, 1, 0.1)) +
ylab("") +  # hide the y label, since it's already next to another chart
ggtitle("Male")
ggplot() +
geom_line(data = femaleGammaTS_1, aes(x = Time, y = Gamma), color = "#FA7DEB", linewidth = 1) +
geom_line(data = femaleGammaTS_2, aes(x = Time, y = Gamma), color = "#CE7DA5", linewidth = 1) +
geom_line(data = femaleGammaTS_3, aes(x = Time, y = Gamma), color = "#563440", linewidth = 1) +
scale_colour_manual(values = c("#FA7DEB", "#CE7DA5", "#563440")) +
geom_vline(xintercept = 0, linetype="dashed") +
geom_hline(yintercept = 0, linetype="solid") +
scale_x_continuous(name = "Time (s)", limits = c(-0.2, 1), breaks = seq(-0.2, 1, 0.1)) +
ylab("Gamma Power (dB, relative to Baseline)") +
ggtitle("Female")
ggplot() +
geom_line(data = maleGammaTS_1, aes(x = Time, y = Gamma), color = "#2DE1FC", linewidth = 1) +
geom_line(data = maleGammaTS_2, aes(x = Time, y = Gamma), color = "#2274A5", linewidth = 1) +
geom_line(data = maleGammaTS_3, aes(x = Time, y = Gamma), color = "#090C9B", linewidth = 1) +
geom_vline(xintercept = 0, linetype="dashed") +
geom_hline(yintercept = 0, linetype="solid") +
scale_x_continuous(name = "Time (s)", limits = c(-0.2, 1), breaks = seq(-0.2, 1, 0.1)) +
ylab("") +  # hide the y label, since it's already next to another chart
ggtitle("Male")
ggplot(femaleGammaTS_1, aes(x=Time) +
)
ggplot(femaleGammaTS_1, aes(x=Time)) +
geom_line(data = femaleGammaTS_1, aes(x = Time, y = Gamma), color = "#FA7DEB", linewidth = 1) +
geom_line(data = femaleGammaTS_2, aes(x = Time, y = Gamma), color = "#CE7DA5", linewidth = 1) +
geom_line(data = femaleGammaTS_3, aes(x = Time, y = Gamma), color = "#563440", linewidth = 1) +
geom_vline(xintercept = 0, linetype="dashed") +
geom_hline(yintercept = 0, linetype="solid") +
scale_x_continuous(name = "Time (s)", limits = c(-0.2, 1), breaks = seq(-0.2, 1, 0.1)) +
ylab("Gamma Power (dB, relative to Baseline)") +
ggtitle("Female")
ggplot() +
geom_line(data = maleGammaTS_1, aes(x = Time, y = Gamma), color = "#2DE1FC", linewidth = 1) +
geom_line(data = maleGammaTS_2, aes(x = Time, y = Gamma), color = "#2274A5", linewidth = 1) +
geom_line(data = maleGammaTS_3, aes(x = Time, y = Gamma), color = "#090C9B", linewidth = 1) +
geom_vline(xintercept = 0, linetype="dashed") +
geom_hline(yintercept = 0, linetype="solid") +
scale_x_continuous(name = "Time (s)", limits = c(-0.2, 1), breaks = seq(-0.2, 1, 0.1)) +
ylab("") +  # hide the y label, since it's already next to another chart
ggtitle("Male")
ggplot() +
geom_line(data = femaleGammaTS_1, aes(x = Time, y = Gamma), color = "#FA7DEB", linewidth = 1) +
geom_line(data = femaleGammaTS_2, aes(x = Time, y = Gamma), color = "#CE7DA5", linewidth = 1) +
geom_line(data = femaleGammaTS_3, aes(x = Time, y = Gamma), color = "#563440", linewidth = 1) +
geom_line(aes(color=c("low", "med", "high"))) +
geom_vline(xintercept = 0, linetype="dashed") +
geom_hline(yintercept = 0, linetype="solid") +
scale_x_continuous(name = "Time (s)", limits = c(-0.2, 1), breaks = seq(-0.2, 1, 0.1)) +
ylab("Gamma Power (dB, relative to Baseline)") +
ggtitle("Female")
ggplot() +
geom_line(data = femaleGammaTS_1, aes(x = Time, y = Gamma), color = "#FA7DEB", linewidth = 1) +
geom_line(data = femaleGammaTS_2, aes(x = Time, y = Gamma), color = "#CE7DA5", linewidth = 1) +
geom_line(data = femaleGammaTS_3, aes(x = Time, y = Gamma), color = "#563440", linewidth = 1) +
labs(colour = "Stimulus Intensity") +
geom_vline(xintercept = 0, linetype="dashed") +
geom_hline(yintercept = 0, linetype="solid") +
scale_x_continuous(name = "Time (s)", limits = c(-0.2, 1), breaks = seq(-0.2, 1, 0.1)) +
ylab("Gamma Power (dB, relative to Baseline)") +
ggtitle("Female")
ggplot() +
geom_line(data = maleGammaTS_1, aes(x = Time, y = Gamma), color = "#2DE1FC", linewidth = 1) +
geom_line(data = maleGammaTS_2, aes(x = Time, y = Gamma), color = "#2274A5", linewidth = 1) +
geom_line(data = maleGammaTS_3, aes(x = Time, y = Gamma), color = "#090C9B", linewidth = 1) +
geom_vline(xintercept = 0, linetype="dashed") +
geom_hline(yintercept = 0, linetype="solid") +
scale_x_continuous(name = "Time (s)", limits = c(-0.2, 1), breaks = seq(-0.2, 1, 0.1)) +
ylab("") +  # hide the y label, since it's already next to another chart
ggtitle("Male")
ggplot() +
geom_line(data = femaleGammaTS_1, aes(x = Time, y = Gamma), color = "#FA7DEB", linewidth = 1) +
geom_line(data = femaleGammaTS_2, aes(x = Time, y = Gamma), color = "#CE7DA5", linewidth = 1) +
geom_line(data = femaleGammaTS_3, aes(x = Time, y = Gamma), color = "#563440", linewidth = 1) +
theme(legend.position = c(.95, .95)) +
geom_vline(xintercept = 0, linetype="dashed") +
geom_hline(yintercept = 0, linetype="solid") +
scale_x_continuous(name = "Time (s)", limits = c(-0.2, 1), breaks = seq(-0.2, 1, 0.1)) +
ylab("Gamma Power (dB, relative to Baseline)") +
ggtitle("Female")
ggplot() +
geom_line(data = maleGammaTS_1, aes(x = Time, y = Gamma), color = "#2DE1FC", linewidth = 1) +
geom_line(data = maleGammaTS_2, aes(x = Time, y = Gamma), color = "#2274A5", linewidth = 1) +
geom_line(data = maleGammaTS_3, aes(x = Time, y = Gamma), color = "#090C9B", linewidth = 1) +
geom_vline(xintercept = 0, linetype="dashed") +
geom_hline(yintercept = 0, linetype="solid") +
scale_x_continuous(name = "Time (s)", limits = c(-0.2, 1), breaks = seq(-0.2, 1, 0.1)) +
ylab("") +  # hide the y label, since it's already next to another chart
ggtitle("Male")
library(png)
install.packages("png")
library(png)
Mlegend <- readPNG('../Figures/maleLegend.png')
Flegend <- readPNG('../Figures/femaleLegend.png')
ggplot() +
geom_line(data = femaleGammaTS_1, aes(x = Time, y = Gamma), color = "#FA7DEB", linewidth = 1) +
geom_line(data = femaleGammaTS_2, aes(x = Time, y = Gamma), color = "#CE7DA5", linewidth = 1) +
geom_line(data = femaleGammaTS_3, aes(x = Time, y = Gamma), color = "#563440", linewidth = 1) +
annotation_raster(Flegend, ymin = 4.5, ymax= 5, xmin = 30, xmax = 35) +
geom_vline(xintercept = 0, linetype="dashed") +
geom_hline(yintercept = 0, linetype="solid") +
scale_x_continuous(name = "Time (s)", limits = c(-0.2, 1), breaks = seq(-0.2, 1, 0.1)) +
ylab("Gamma Power (dB, relative to Baseline)") +
ggtitle("Female")
ggplot() +
geom_line(data = maleGammaTS_1, aes(x = Time, y = Gamma), color = "#2DE1FC", linewidth = 1) +
geom_line(data = maleGammaTS_2, aes(x = Time, y = Gamma), color = "#2274A5", linewidth = 1) +
geom_line(data = maleGammaTS_3, aes(x = Time, y = Gamma), color = "#090C9B", linewidth = 1) +
annotation_raster(Mlegend, ymin = 4.5, ymax= 5, xmin = 30, xmax = 35) +
geom_vline(xintercept = 0, linetype="dashed") +
geom_hline(yintercept = 0, linetype="solid") +
scale_x_continuous(name = "Time (s)", limits = c(-0.2, 1), breaks = seq(-0.2, 1, 0.1)) +
ylab("") +  # hide the y label, since it's already next to another chart
ggtitle("Male")
ggplot() +
geom_line(data = femaleGammaTS_1, aes(x = Time, y = Gamma), color = "#FA7DEB", linewidth = 1) +
geom_line(data = femaleGammaTS_2, aes(x = Time, y = Gamma), color = "#CE7DA5", linewidth = 1) +
geom_line(data = femaleGammaTS_3, aes(x = Time, y = Gamma), color = "#563440", linewidth = 1) +
annotation_raster(Flegend, ymin = 0.4, ymax= 0.6, xmin = 0.8, xmax = 1) +
geom_vline(xintercept = 0, linetype="dashed") +
geom_hline(yintercept = 0, linetype="solid") +
scale_x_continuous(name = "Time (s)", limits = c(-0.2, 1), breaks = seq(-0.2, 1, 0.1)) +
ylab("Gamma Power (dB, relative to Baseline)") +
ggtitle("Female")
ggplot() +
geom_line(data = maleGammaTS_1, aes(x = Time, y = Gamma), color = "#2DE1FC", linewidth = 1) +
geom_line(data = maleGammaTS_2, aes(x = Time, y = Gamma), color = "#2274A5", linewidth = 1) +
geom_line(data = maleGammaTS_3, aes(x = Time, y = Gamma), color = "#090C9B", linewidth = 1) +
annotation_raster(Mlegend, ymin = 0.4, ymax= 0.6, xmin = 0.8, xmax = 1) +
geom_vline(xintercept = 0, linetype="dashed") +
geom_hline(yintercept = 0, linetype="solid") +
scale_x_continuous(name = "Time (s)", limits = c(-0.2, 1), breaks = seq(-0.2, 1, 0.1)) +
ylab("") +  # hide the y label, since it's already next to another chart
ggtitle("Male")
ggplot() +
geom_line(data = femaleGammaTS_1, aes(x = Time, y = Gamma), color = "#FA7DEB", linewidth = 1) +
geom_line(data = femaleGammaTS_2, aes(x = Time, y = Gamma), color = "#CE7DA5", linewidth = 1) +
geom_line(data = femaleGammaTS_3, aes(x = Time, y = Gamma), color = "#563440", linewidth = 1) +
annotation_raster(Flegend, ymin = 0.4, ymax= 0.6, xmin = 0.8, xmax = 1) +
geom_vline(xintercept = 0, linetype="dashed") +
geom_hline(yintercept = 0, linetype="solid") +
scale_x_continuous(name = "Time (s)", limits = c(-0.2, 1), breaks = seq(-0.2, 1, 0.1)) +
ylab("Gamma Power (dB, relative to Baseline)") +
ggtitle("Female")
ggplot() +
geom_line(data = maleGammaTS_1, aes(x = Time, y = Gamma), color = "#2DE1FC", linewidth = 1) +
geom_line(data = maleGammaTS_2, aes(x = Time, y = Gamma), color = "#2274A5", linewidth = 1) +
geom_line(data = maleGammaTS_3, aes(x = Time, y = Gamma), color = "#090C9B", linewidth = 1) +
annotation_raster(Mlegend, ymin = 0.4, ymax= 0.6, xmin = 0.8, xmax = 1) +
geom_vline(xintercept = 0, linetype="dashed") +
geom_hline(yintercept = 0, linetype="solid") +
scale_x_continuous(name = "Time (s)", limits = c(-0.2, 1), breaks = seq(-0.2, 1, 0.1)) +
ylab("") +  # hide the y label, since it's already next to another chart
ggtitle("Male")
ggplot() +
geom_line(data = femaleGammaTS_1, aes(x = Time, y = Gamma), color = "#FA7DEB", linewidth = 1) +
geom_line(data = femaleGammaTS_2, aes(x = Time, y = Gamma), color = "#CE7DA5", linewidth = 1) +
geom_line(data = femaleGammaTS_3, aes(x = Time, y = Gamma), color = "#563440", linewidth = 1) +
annotation_raster(Flegend, ymin = 0.4, ymax= 0.6, xmin = 0.8, xmax = 1) +
geom_vline(xintercept = 0, linetype="dashed") +
geom_hline(yintercept = 0, linetype="solid") +
scale_x_continuous(name = "Time (s)", limits = c(-0.2, 1), breaks = seq(-0.2, 1, 0.1)) +
ylab("Gamma Power (dB, relative to Baseline)") +
ylim(0, 1) +
ggtitle("Female")
ggplot() +
geom_line(data = maleGammaTS_1, aes(x = Time, y = Gamma), color = "#2DE1FC", linewidth = 1) +
geom_line(data = maleGammaTS_2, aes(x = Time, y = Gamma), color = "#2274A5", linewidth = 1) +
geom_line(data = maleGammaTS_3, aes(x = Time, y = Gamma), color = "#090C9B", linewidth = 1) +
annotation_raster(Mlegend, ymin = 0.4, ymax= 0.6, xmin = 0.8, xmax = 1) +
geom_vline(xintercept = 0, linetype="dashed") +
geom_hline(yintercept = 0, linetype="solid") +
scale_x_continuous(name = "Time (s)", limits = c(-0.2, 1), breaks = seq(-0.2, 1, 0.1)) +
ylab("") +  # hide the y label, since it's already next to another chart
ylim(0, 1) +
ggtitle("Male")
ggplot() +
geom_line(data = femaleGammaTS_1, aes(x = Time, y = Gamma), color = "#FA7DEB", linewidth = 1) +
geom_line(data = femaleGammaTS_2, aes(x = Time, y = Gamma), color = "#CE7DA5", linewidth = 1) +
geom_line(data = femaleGammaTS_3, aes(x = Time, y = Gamma), color = "#563440", linewidth = 1) +
annotation_raster(Flegend, ymin = 0.4, ymax= 0.6, xmin = 0.8, xmax = 1) +
geom_vline(xintercept = 0, linetype="dashed") +
geom_hline(yintercept = 0, linetype="solid") +
scale_x_continuous(name = "Time (s)", limits = c(-0.2, 1), breaks = seq(-0.2, 1, 0.1)) +
ylab("Gamma Power (dB, relative to Baseline)") +
ylim(-0.25, 1) +
ggtitle("Female")
ggplot() +
geom_line(data = maleGammaTS_1, aes(x = Time, y = Gamma), color = "#2DE1FC", linewidth = 1) +
geom_line(data = maleGammaTS_2, aes(x = Time, y = Gamma), color = "#2274A5", linewidth = 1) +
geom_line(data = maleGammaTS_3, aes(x = Time, y = Gamma), color = "#090C9B", linewidth = 1) +
annotation_raster(Mlegend, ymin = 0.4, ymax= 0.6, xmin = 0.8, xmax = 1) +
geom_vline(xintercept = 0, linetype="dashed") +
geom_hline(yintercept = 0, linetype="solid") +
scale_x_continuous(name = "Time (s)", limits = c(-0.2, 1), breaks = seq(-0.2, 1, 0.1)) +
ylab("") +  # hide the y label, since it's already next to another chart
ylim(-0.25, 1) +
ggtitle("Male")
ggplot() +
geom_line(data = femaleGammaTS_1, aes(x = Time, y = Gamma), color = "#FA7DEB", linewidth = 1) +
geom_line(data = femaleGammaTS_2, aes(x = Time, y = Gamma), color = "#CE7DA5", linewidth = 1) +
geom_line(data = femaleGammaTS_3, aes(x = Time, y = Gamma), color = "#563440", linewidth = 1) +
annotation_raster(Flegend, ymin = 0.4, ymax= 0.6, xmin = 0.8, xmax = 1) +
geom_vline(xintercept = 0, linetype="dashed") +
geom_hline(yintercept = 0, linetype="solid") +
scale_x_continuous(name = "Time (s)", limits = c(-0.2, 1), breaks = seq(-0.2, 1, 0.1)) +
ylab("Gamma Power (dB, relative to Baseline)") +
ylim(-0.15, 1) +
ggtitle("Female")
ggplot() +
geom_line(data = maleGammaTS_1, aes(x = Time, y = Gamma), color = "#2DE1FC", linewidth = 1) +
geom_line(data = maleGammaTS_2, aes(x = Time, y = Gamma), color = "#2274A5", linewidth = 1) +
geom_line(data = maleGammaTS_3, aes(x = Time, y = Gamma), color = "#090C9B", linewidth = 1) +
annotation_raster(Mlegend, ymin = 0.4, ymax= 0.6, xmin = 0.8, xmax = 1) +
geom_vline(xintercept = 0, linetype="dashed") +
geom_hline(yintercept = 0, linetype="solid") +
scale_x_continuous(name = "Time (s)", limits = c(-0.2, 1), breaks = seq(-0.2, 1, 0.1)) +
ylab("") +  # hide the y label, since it's already next to another chart
ylim(-0.15, 1) +
ggtitle("Male")
ggplot() +
geom_line(data = femaleGammaTS_1, aes(x = Time, y = Gamma), color = "#FA7DEB", linewidth = 1) +
geom_line(data = femaleGammaTS_2, aes(x = Time, y = Gamma), color = "#CE7DA5", linewidth = 1) +
geom_line(data = femaleGammaTS_3, aes(x = Time, y = Gamma), color = "#563440", linewidth = 1) +
annotation_raster(Flegend, ymin = 0.75, ymax= 1, xmin = 0.8, xmax = 1) +
geom_vline(xintercept = 0, linetype="dashed") +
geom_hline(yintercept = 0, linetype="solid") +
scale_x_continuous(name = "Time (s)", limits = c(-0.2, 1), breaks = seq(-0.2, 1, 0.1)) +
ylab("Gamma Power (dB, relative to Baseline)") +
ylim(-0.15, 1) +
ggtitle("Female")
ggplot() +
geom_line(data = maleGammaTS_1, aes(x = Time, y = Gamma), color = "#2DE1FC", linewidth = 1) +
geom_line(data = maleGammaTS_2, aes(x = Time, y = Gamma), color = "#2274A5", linewidth = 1) +
geom_line(data = maleGammaTS_3, aes(x = Time, y = Gamma), color = "#090C9B", linewidth = 1) +
annotation_raster(Mlegend, ymin = 0.75, ymax= 1, xmin = 0.8, xmax = 1) +
geom_vline(xintercept = 0, linetype="dashed") +
geom_hline(yintercept = 0, linetype="solid") +
scale_x_continuous(name = "Time (s)", limits = c(-0.2, 1), breaks = seq(-0.2, 1, 0.1)) +
ylab("") +  # hide the y label, since it's already next to another chart
ylim(-0.15, 1) +
ggtitle("Male")
library(readr)
Thresholds <- read_csv("Thresholds.csv")
View(Thresholds)
mean(Thresholds$Age)
sd(Thresholds$Age)
## Confirmation of Legitimacy: *Did we collect data properly?*
As processing EEG data is a difficult thing, it is important to document your steps thoroughly and facilitate reproduction of your work. The original publication did very well in this endeavor, making their dataset publicly available and detailing their analysis steps, however perfect replication of their processing steps was impossible. Due to use of proprietary software and an (albeit understandable) undescribed process of "visually inspecting ICA components", the process was reproduced to the best of our ability.
library(ggpubr)
library(car)
library(lme4)
library(multcomp)
library(tidyverse)
library(rstatix)
library(lmerTest)
library(rcompanion)
library(emmeans)
library(readr)
library(ggplot2)
require(gridExtra)
library(ggsignif)
library(png)
library(reshape2)
options(width = 115)
erp1 <- read_csv("Perception_erp.csv", col_types = cols(...1 = col_skip(),
Sex = col_factor(levels = c("male", "female")),
Stimulus = col_factor(levels = c("1", "2", "3"))))
erp2 <- read_csv("EDA_erp.csv", col_types = cols(...1 = col_skip(),
Sex = col_factor(levels = c("male", "female")),
Stimulus = col_factor(levels = c("1", "2", "3"))))
erp3 <- read_csv("Motor_erp.csv", col_types = cols(...1 = col_skip(),
Sex = col_factor(levels = c("male", "female")),
Stimulus = col_factor(levels = c("1", "2", "3"))))
erp4 <- read_csv("Control_erp.csv", col_types = cols(...1 = col_skip(),
Sex = col_factor(levels = c("male", "female")),
Stimulus = col_factor(levels = c("1", "2", "3"))))
erp <- do.call("rbind", list(erp1, erp2, erp3, erp4))
View(erp)
table(erp$Component)
freq1 <- read_csv("Perception_freq.csv", col_types = cols(...1 = col_skip(),
Sex = col_factor(levels = c("male", "female")),
Stimulus = col_factor(levels = c("1", "2", "3"))))
freq2 <- read_csv("EDA_freq.csv", col_types = cols(...1 = col_skip(),
Sex = col_factor(levels = c("male", "female")),
Stimulus = col_factor(levels = c("1", "2", "3"))))
freq3 <- read_csv("Motor_freq.csv", col_types = cols(...1 = col_skip(),
Sex = col_factor(levels = c("male", "female")),
Stimulus = col_factor(levels = c("1", "2", "3"))))
freq4 <- read_csv("Control_freq.csv", col_types = cols(...1 = col_skip(),
Sex = col_factor(levels = c("male", "female")),
Stimulus = col_factor(levels = c("1", "2", "3"))))
freq <- do.call("rbind", list(freq1, freq2, freq3, freq4))
table(freq$Value)
table(freq$Component)
threshold <- read_csv("Thresholds.csv", col_types = cols(Sex = col_factor(
levels = c("male", "female"))))
nrow(threshold$Threshold)
length(threshold$Threshold)
gsub('_AMP', '', "N2_AMP")
paste(gsub('_AMP', '', "N2_Amp"), "Amplitude", sep=" ")
paste(gsub('_Amp', '', "N2_Amp"), "Amplitude", sep=" ")
library(ggpubr)
library(car)
library(lme4)
library(multcomp)
library(tidyverse)
library(rstatix)
library(lmerTest)
library(rcompanion)
library(emmeans)
library(readr)
library(ggplot2)
require(gridExtra)
library(ggsignif)
library(png)
library(reshape2)
options(width = 115)
erp1 <- read_csv("Perception_erp.csv", col_types = cols(...1 = col_skip(),
Sex = col_factor(levels = c("male", "female")),
Stimulus = col_factor(levels = c("1", "2", "3"))))
erp2 <- read_csv("EDA_erp.csv", col_types = cols(...1 = col_skip(),
Sex = col_factor(levels = c("male", "female")),
Stimulus = col_factor(levels = c("1", "2", "3"))))
erp3 <- read_csv("Motor_erp.csv", col_types = cols(...1 = col_skip(),
Sex = col_factor(levels = c("male", "female")),
Stimulus = col_factor(levels = c("1", "2", "3"))))
erp4 <- read_csv("Control_erp.csv", col_types = cols(...1 = col_skip(),
Sex = col_factor(levels = c("male", "female")),
Stimulus = col_factor(levels = c("1", "2", "3"))))
erp <- do.call("rbind", list(erp1, erp2, erp3, erp4))
View(erp)
View(erp1)
View(erp)
length(subset(erp, erp$Component=="N1_Amplitude")$Value)
subset(erp, erp$Component=="N1_Amplitude")
View(erp)
subset(erp, erp$Component=="N1_Amp")
legnth(subset(erp, erp$Component=="N1_Amp")$Value)
length(subset(erp, erp$Component=="N1_Amp")$Value)
test <- subset(erp, erp$Component=="N1_Amp")
View(test)
50*4*3
51*4*3
freq1 <- read_csv("Perception_freq.csv", col_types = cols(...1 = col_skip(),
Sex = col_factor(levels = c("male", "female")),
Stimulus = col_factor(levels = c("1", "2", "3"))))
freq2 <- read_csv("EDA_freq.csv", col_types = cols(...1 = col_skip(),
Sex = col_factor(levels = c("male", "female")),
Stimulus = col_factor(levels = c("1", "2", "3"))))
freq3 <- read_csv("Motor_freq.csv", col_types = cols(...1 = col_skip(),
Sex = col_factor(levels = c("male", "female")),
Stimulus = col_factor(levels = c("1", "2", "3"))))
freq4 <- read_csv("Control_freq.csv", col_types = cols(...1 = col_skip(),
Sex = col_factor(levels = c("male", "female")),
Stimulus = col_factor(levels = c("1", "2", "3"))))
freq <- do.call("rbind", list(freq1, freq2, freq3, freq4))
freq$Value <- abs(freq$Value)
View(freq)
test <- subset(freq, freq$Component=="Gamma_Amp")
View(test)
View(freq)
table(freq$ID)
test[!duplicated(test), ]
test <- test[!duplicated(test), ]
freq1 <- read_csv("Perception_freq.csv", col_types = cols(...1 = col_skip(),
Sex = col_factor(levels = c("male", "female")),
Stimulus = col_factor(levels = c("1", "2", "3"))))
freq2 <- read_csv("EDA_freq.csv", col_types = cols(...1 = col_skip(),
Sex = col_factor(levels = c("male", "female")),
Stimulus = col_factor(levels = c("1", "2", "3"))))
freq3 <- read_csv("Motor_freq.csv", col_types = cols(...1 = col_skip(),
Sex = col_factor(levels = c("male", "female")),
Stimulus = col_factor(levels = c("1", "2", "3"))))
freq4 <- read_csv("Control_freq.csv", col_types = cols(...1 = col_skip(),
Sex = col_factor(levels = c("male", "female")),
Stimulus = col_factor(levels = c("1", "2", "3"))))
freq <- do.call("rbind", list(freq1, freq2, freq3, freq4))
freq <- freq[!duplicated(freq), ]  # remove duplicate rows
freq <- subset(freq, freq$ID!=18)
freq$Value <- abs(freq$Value)
View(freq)
R1 <- read_csv("Perception_ratings.csv", col_types = cols(Sex = col_factor(
levels = c("male", "female")),
Stim = col_factor(
levels = c("low", "med", "high"))))
R2 <- read_csv("Control_ratings.csv", col_types = cols(Sex = col_factor(
levels = c("male", "female")),
Stim = col_factor(
levels = c("low", "med", "high"))))
ratings <- rbind(R1, R2)
ratings <- freq[!duplicated(freq), ]  # remove duplicate rows
ratings <- subset(ratings, ratings$ID!=18)  # exclude subject 18 (DNF motor)
View(ratings)
R1 <- read_csv("Perception_ratings.csv", col_types = cols(Sex = col_factor(
levels = c("male", "female")),
Stim = col_factor(
levels = c("low", "med", "high"))))
R2 <- read_csv("Control_ratings.csv", col_types = cols(Sex = col_factor(
levels = c("male", "female")),
Stim = col_factor(
levels = c("low", "med", "high"))))
ratings <- rbind(R1, R2)
ratings <- subset(ratings, ratings$ID!=18)  # exclude subject 18 (DNF motor)
View(ratings)
ratings <- subset(ratings, ratings$Subject!=18)  # exclude subject 18 (DNF motor)
table(ratings$Subject)
