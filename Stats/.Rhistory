ggboxplot(threshold, x = "Sex", y = "Threshold",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Pain Threshold (mJ)", xlab = "Sex")
ggqqplot(threshold, "Threshold", facet.by = "Sex")
View(threshold)
threshold <- subset(threshold, threshold$Subject != 33)  # remove outlier
ggqqplot(threshold, "Threshold", facet.by = "Sex")
# Visualize distributions
ggboxplot(threshold, x = "Sex", y = "Threshold",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Pain Threshold (mJ)", xlab = "Sex")
# Compute the analysis of variance
thresh.aov <- aov(Threshold ~ Sex, data = threshold)
# Summary of the analysis
summary(thresh.aov)
# Levene's for homogeneity of variance (significant = non-homogeneous)
leveneTest(Threshold ~ Sex, data = threshold)
# Extract the residuals
aov_residuals <- residuals(object = thresh.aov)
# Run Shapiro-Wilk test to check for normality (significant = non-normal)
shapiro.test(x = aov_residuals)
ratings <- read_excel("Statistics.xlsx",
sheet = "Gender & Pain Rating",
col_types = c("numeric","text", "text", "text",
"skip", "numeric", "skip", "skip", "skip"))
# Rename and factor variables
ratings$Sex <- as.factor(ratings$Sex)
ratings$Pain <- as.numeric(ratings$`Verbal Pain Rating`)
ratings$Stim <- as.factor(ratings$`Stimulus Level`)
# omit NAs, where participant did not report within time limit
ratings <- na.omit(ratings)
library(tidyverse)
library(rstatix)
install.packages("tidyverse")
ratings %>%
group_by(Stim) %>%
get_summary_stats(Pain, type = "mean_sd")
ratings %>%
group_by(Sex) %>%
get_summary_stats(Pain, type = "mean_sd")
?get_summary_stats
ratings %>%
group_by(Sex) %>%
get_summary_stats(Pain, type = "full")
ratings %>%
group_by(Sex) %>%
get_summary_stats(Pain, type = "common")
ggboxplot(ratings, x = "Sex", y = "Pain", add = "point")
pain.model <- lmer(Pain ~ Sex + Stim + (1|Subject)
pain.model <- lmer(Pain ~ Sex + Stim + (1|Subject)
pain.model <- lmer(Pain ~ Sex + Stim + (1|Subject))
pain.model <- lmer(Pain ~ Sex + Stim + (1|Subject), data = ratings)
anova(model)
anova(pain.model)
rand(pain.model)
library(lmerTest)
install.packages("lmerTest")
library(lmerTest)
anova(pain.model)
rand(pain.model)
?anova
summary(pain.model)
pain.model <- lmer(Pain ~ Sex + Stim + (1|Subject), data = ratings, REML = TRUE)
anova(pain.model)
rand(pain.model)
# specify a null hypothesis model
pain.null <- lmer(Pain ~ 1 + (1|Subject), data = ratings)
library(rcompanion)
install.packages("rcompanion")
library(rcompanion)
# calculate the pseudo R squaured of our model compared to the null
nagelkerke(fit  = pain.model,
null = pain.null)
# specify a null hypothesis model, no factors except random effect of Subjects
pain.null <- lmer(Pain ~ 1 + (1|Subject), data = ratings, REML = TRUE)
# calculate the pseudo R squaured of our model compared to the null
nagelkerke(fit  = pain.model,
null = pain.null)
# calculate the pseudo R squared of our model compared to the null
anova(pain.model, pain.null)
# visualize the data
ggboxplot(ratings, x = "Sex", y = "Pain", add = "point")
# Visualize distributions
ggboxplot(threshold, x = "Sex", y = "Threshold",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Pain Threshold (mJ)", xlab = "Sex")
# visualize the data
ggboxplot(threshold, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex")
# visualize the data
ggboxplot(rating, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex")
# visualize the data
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex")
library(readxl)
library(ggpubr)
library(car)
library(lme4)
library(multcomp)
library(tidyverse)
library(rstatix)
library(lmerTest)
library(rcompanion)
##### ANOVA on Pain Threshold Data ####
# Load Pain Threshold data
threshold <- read_excel("Statistics.xlsx",
sheet = "Gender & Pain Threshold",
col_types = c("numeric", "text", "numeric",
"numeric", "skip", "skip", "skip",
"skip", "skip", "skip", "skip", "skip",
"skip", "skip", "skip"))
# Assign variables as factors and rename them
threshold$Sex <- as.factor(threshold$`Sex Name`)
threshold$Threshold <- threshold$`Pain Threshold (mJ)`
threshold <- subset(threshold, threshold$Subject != 33)  # remove single outlier
# Visualize distributions
ggboxplot(threshold, x = "Sex", y = "Threshold",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Pain Threshold (mJ)", xlab = "Sex")
ggqqplot(threshold, "Threshold", facet.by = "Sex")
# Compute the analysis of variance
thresh.aov <- aov(Threshold ~ Sex, data = threshold)
# Levene's for homogeneity of variance (significant = non-homogeneous)
leveneTest(Threshold ~ Sex, data = threshold)
# Extract the residuals
aov_residuals <- residuals(object = thresh.aov)
# Run Shapiro-Wilk test to check for normality (significant = non-normal)
shapiro.test(x = aov_residuals)
# Summary of the analysis
summary(thresh.aov)
##### Within Subjects ANCOVA on Verbal Pain Rating Data ####
ratings <- read_excel("Statistics.xlsx",
sheet = "Gender & Pain Rating",
col_types = c("numeric","text", "text", "text",
"skip", "numeric", "skip", "skip", "skip"))
# Rename and factor variables
ratings$Sex <- as.factor(ratings$Sex)
ratings$Pain <- as.numeric(ratings$`Verbal Pain Rating`)
ratings$Stim <- as.factor(ratings$`Stimulus Level`)
# omit NAs, where participant did not report within time limit
ratings <- na.omit(ratings)
# visualize the data
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex")
# model Pain Ratings as a factor of Sex, controlling for Stim level and with
# Subject as a random effect (since we have subject-specific pain thresholds)
pain.model <- lmer(Pain ~ Sex + Stim + (1|Subject), data = ratings, REML = TRUE)
anova(pain.model)
rand(pain.model)
# specify a null hypothesis model, no factors except random effect of Subjects
pain.null <- lmer(Pain ~ 1 + (1|Subject), data = ratings, REML = TRUE)
# calculate the pseudo R squared of our model compared to the null
nagelkerke(fit  = pain.model,
null = pain.null)
a <- nagelkerke(fit  = pain.model,
null = pain.null)
a$Pseudo.R.squared.for.model.vs.null
# calculate the pseudo R squared of our model compared to the null
nagelkerke(fit  = pain.model,
null = pain.null)$Pseudo.R.squared.for.model.vs.null
anova(pain.model)
rand(pain.model)
?ggboxplot
# visualize the data
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex",
facet.by = "Stim")
# visualize the data
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex",
facet.by = "Stim") +
stat_summary(fun.y="mean")
# visualize the data
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex",
facet.by = "Stim") +
stat_summary(fun.y="mean") +
stat_compare_means(method = "t.test")
?stat_summary
# visualize the data
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex",
facet.by = "Stim") +
stat_summary(fun.y="mean", geom = "crossbar")
# visualize the data
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex",
facet.by = "Stim") +
stat_summary(fun.y="mean", geom = "errorbar")
# visualize the data
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex",
facet.by = "Stim") +
stat_summary(fun="mean")
# visualize the data
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex",
facet.by = "Stim")
pain.model <- lmer(Pain ~ Sex + Stim, data = ratings, REML = TRUE)
pain.model <- lme(Pain ~ Sex + Stim, data = ratings, REML = TRUE)
pain.model <- lmer(Pain ~ Sex + Stim, data = ratings)
pain.model <- lmer(Pain ~ Sex + Stim, data = ratings)
anova(pain.model)
rand(pain.model)
pain.model <- aov(Pain ~ Sex + Stim, data = ratings)
anova(pain.model)
rand(pain.model)
TukeyHSD(pain.model)
# for demonstration purposes, we will run it again WITHOUT the random effects
pain.model <- lm(Pain ~ Sex + Stim, data = ratings)
anova(pain.model)
TukeyHSD(pain.model)
# for demonstration purposes, we will run it again WITHOUT the random effects
pain.model <- aov(Pain ~ Sex + Stim, data = ratings)
anova(pain.model)
TukeyHSD(pain.model)
# visualize the data
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex")
# visualize the data
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex") +
geom_point(position = "jitter")
# visualize the data
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex") +
geom_point(position = "jitter") +
theme_bw()
sjp.lmer(pain.model)
# a visualization of this significance when random effects are ignored
ggplot(ratings, aes(Sex, Pain, group=interaction(Sex, Stim), col=Stim, shape=Sex )) +
geom_line(aes(y=pain.model, lty=Stim), size=0.8) +
geom_point(alpha = 0.3) +
geom_hline(yintercept=0, linetype="dashed") +
theme_bw()
# a visualization of this significance when random effects are ignored
ggplot(ratings, aes(Sex, Pain, group=interaction(Sex, Stim), col=Stim, shape=Sex )) +
geom_line(aes(y=pain.model, lty=Pain), size=0.8) +
geom_point(alpha = 0.3) +
geom_hline(yintercept=0, linetype="dashed") +
theme_bw()
# a visualization of this significance when random effects are ignored
ggplot(ratings, aes(Sex, Pain, group=interaction(Sex, Stim), col=Stim, shape=Sex )) +
geom_line(aes(y=pain.model, lty=Sex), size=0.8) +
geom_point(alpha = 0.3) +
geom_hline(yintercept=0, linetype="dashed") +
theme_bw()
# a visualization of this significance when random effects are ignored
ggplot(ratings, aes(Sex, Pain, group=interaction(Sex, Stim), col=Stim, shape=Sex )) +
geom_line(aes(y=pain.model), size=0.8) +
geom_point(alpha = 0.3) +
geom_hline(yintercept=0, linetype="dashed") +
theme_bw()
# a visualization of this significance when random effects are ignored
ggplot(ratings, aes(Sex, Pain, group=interaction(Sex, Stim), col=Stim, shape=Sex )) +
geom_point(alpha = 0.3) +
geom_hline(yintercept=0, linetype="dashed") +
theme_bw()
# a visualization of this significance when random effects are ignored
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex",
facet.by = "Stim")
# a visualization of this significance when random effects are ignored
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex",
facet.by = "Stim") +
geom_point()
?geom_point
# a visualization of this significance when random effects are ignored
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex",
facet.by = "Stim") +
geom_point(position = "jitter")
# a visualization of this significance when random effects are ignored
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex",
facet.by = "Stim") +
geom_point(position = "jitter", color = "grey")
# a visualization of this significance when random effects are ignored
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex",
facet.by = "Stim") +
geom_point(position = "jitter", color = "grey") +
geom_density2d()
# a visualization of this significance when random effects are ignored
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex",
facet.by = "Stim") +
geom_point(position = "jitter", color = "grey") +
geom_smooth()
# a visualization of this significance when random effects are ignored
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex",
facet.by = "Stim") +
geom_smooth()
# a visualization of this significance when random effects are ignored
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex",
facet.by = "Stim") +
geom_point(shape = '.')
# a visualization of this significance when random effects are ignored
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex",
facet.by = "Stim") +
geom_point(position = "jitter", shape = '.')
# a visualization of this significance when random effects are ignored
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex",
facet.by = "Stim") +
geom_point(shape = 'x')
# a visualization of this significance when random effects are ignored
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex",
facet.by = "Stim") +
geom_point(color = "grey")
# a visualization of this significance when random effects are ignored
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex",
facet.by = "Stim") +
geom_point(group_by(Stim) %>%
summarise(Average = mean(Pain)),
color = "grey")
# a visualization of this significance when random effects are ignored
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex",
facet.by = "Stim") +
geom_point(data = ratings %>%
group_by(Stim) %>%
summarise(Average = mean(Pain)),
color = "grey")
# a visualization of this significance when random effects are ignored
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex",
facet.by = "Stim") +
geom_point(data = ratings %>%
group_by(Sex) %>%
summarise(Average = mean(Pain)),
color = "grey")
# a visualization of this significance when random effects are ignored
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex",
facet.by = "Stim") +
stat_summary(fun.y = mean, color = "darkred", geom = "point",
shape = 18, size = 3, show_guide = FALSE)
# a visualization of this significance when random effects are ignored
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex",
facet.by = "Stim") +
stat_summary(fun = mean, color = "darkred", geom = "point",
shape = 18, size = 3, show_guide = FALSE)
# a visualization of this significance when random effects are ignored
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex",
facet.by = "Stim") +
stat_summary(fun = mean, color = "darkred", geom = "point",
shape = 18, size = 3)
# a visualization of this significance when random effects are ignored
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex",
facet.by = "Stim") +
stat_summary(fun = mean)
# a visualization of this significance when random effects are ignored
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex",
facet.by = "Stim") +
stat_summary(fun = mean) +
geom_point(color = "grey")
# a visualization of this significance when random effects are ignored
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex",
facet.by = "Stim") +
geom_point(color = "grey") +
stat_summary(fun = mean)
# a visualization of this significance when random effects are ignored
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex",
facet.by = "Stim") +
geom_point(color = "grey") +
stat_summary(fun = mean, shape = 18)
ratings <- read_excel("Statistics.xlsx",
sheet = "Gender & Pain Rating",
col_types = c("numeric","text", "text", "text",
"skip", "numeric", "skip", "skip", "skip"))
# Rename and factor variables
ratings$Sex <- as.factor(ratings$Sex)
ratings$Pain <- as.numeric(ratings$`Verbal Pain Rating`)
ratings$Stim <- as.factor(ratings$`Stimulus Level`)
# omit NAs, where participant did not report within time limit
ratings <- na.omit(ratings)
# visualize the data
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex") +
geom_point(position = "jitter")
library(readxl)
library(ggpubr)
library(car)
library(lme4)
library(multcomp)
library(tidyverse)
library(rstatix)
library(lmerTest)
library(rcompanion)
# visualize the data
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex") +
geom_point(position = "jitter")
# visualize the data
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex")
# a visualization of this significance when random effects are ignored
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex",
facet.by = "Stim") +
geom_point(color = "grey") +
stat_summary(fun = mean, shape = 18)
# model Pain Ratings as a factor of Sex, controlling for Stim level and with
# Subject as a random effect (since we have subject-specific pain thresholds)
pain.model <- lmer(Pain ~ Sex * Stim + (1|Subject), data = ratings, REML = TRUE)
anova(pain.model)
rand(pain.model)
TukeyHSD(pain.model)
install.packages("emmeans")
library(emmeans)
emmeans(pain.model, list(~ Sex), adjust = "tukey")
cld(post.hoc,
alpha=0.05,
Letters=letters,        ### Use lower-case letters for .group
adjust="tukey")         ###  Tukey-adjusted comparisons
post.hoc <- emmeans(pain.model, list(~ Sex), adjust = "tukey")
cld(post.hoc,
alpha=0.05,
Letters=letters,        ### Use lower-case letters for .group
adjust="tukey")         ###  Tukey-adjusted comparisons
post.hoc <- emmeans(pain.model, "Sex")
pairs(post.hoc, adjust = "fdr")
# model Pain Ratings as a factor of Sex, controlling for Stim level and with
# Subject as a random effect (since we have subject-specific pain thresholds)
pain.model <- lmer(Pain ~ Sex * Stim + (1|Subject), data = ratings, REML = TRUE)
anova(pain.model)
post.hoc <- emmeans(pain.model, "Sex:Stim")
post.hoc <- emmeans(pain.model, ~ Sex * Stim)
pairs(post.hoc, adjust = "fdr")
pairs(post.hoc, simple = “each”)
pairs(post.hoc, simple = "each")
anova(pain.model)
?pairs
pairs(post.hoc, adjust = "tukey")
pairs(post.hoc, adjust = "tukey", simple = "each")
pairs(post.hoc, adjust = "tukey")
# a visualization of this significance when random effects are ignored
ggboxplot(ratings, x = "Sex", y = "Pain",
color = "Sex", palette = c("#00AFBB", "#E7B800"),
ylab = "Verbal Pain Rating", xlab = "Sex",
facet.by = "Stim") +
geom_point(color = "grey") +
stat_summary(fun = mean, shape = 18)
pairs(post.hoc, adjust = "bonferroni")
# model Pain Ratings as a factor of Sex, controlling for Stim level and with
# Subject as a random effect (since we have subject-specific pain thresholds)
pain.model <- lmer(Pain ~ Sex * (Sex|Stim) + (1|Subject), data = ratings, REML = TRUE)
anova(pain.model)
rand(pain.model)
# model Pain Ratings as a factor of Sex, controlling for Stim level and with
# Subject as a random effect (since we have subject-specific pain thresholds)
pain.model <- lmer(Pain ~ Sex * Stim + (1|Subject), data = ratings, REML = TRUE)
anova(pain.model)
pairs(post.hoc, adjust = "tukey")
pain.model <- lmer(Pain ~ Sex * Stim + (1|Subject), data = ratings, REML = TRUE)
anova(pain.model)
pain.model <- lmer(Pain ~ Sex * Stim + (1|Subject) + (Stim|Subject), data = ratings, REML = TRUE)
anova(pain.model)
rand(pain.model)
