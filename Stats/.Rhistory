data = subset(erp, erp$Stimulus==stim)
ggplot(data, aes(fill=Component, y=Value, x=Sex)) +
geom_bar(position="dodge", stat="identity")
}
for(stim in unique(erp$Stimulus)){print(stim)}
require(gridExtra)
data = subset(erp, erp$Stimulus==1)
plot1 <- ggplot(data, aes(fill=Component, y=Value, x=Sex)) +
geom_bar(position="dodge", stat="identity")
data = subset(erp, erp$Stimulus==2)
plot2 <- ggplot(data, aes(fill=Component, y=Value, x=Sex)) +
geom_bar(position="dodge", stat="identity")
data = subset(erp, erp$Stimulus==3)
plot3 <- ggplot(data, aes(fill=Component, y=Value, x=Sex)) +
geom_bar(position="dodge", stat="identity")
grid.arrange(plot1, plot2, plot3, ncol=3)
subset(erp, erp$Stimulus==3)
subset(erp, erp$Stimulus==2)
subset(erp, erp$Stimulus==3)
subset(erp, erp$Stimulus==2)
# visualize the data
data <- subset(erp, erp$Stimulus==1)
plot1 <- ggplot(data, aes(fill=Component, y=Value, x=Sex)) +
geom_bar(position="dodge", stat="identity")
data <- subset(erp, erp$Stimulus==2)
plot2 <- ggplot(data, aes(fill=Component, y=Value, x=Sex)) +
geom_bar(position="dodge", stat="identity")
data <- subset(erp, erp$Stimulus==3)
plot3 <- ggplot(data, aes(fill=Component, y=Value, x=Sex)) +
geom_bar(position="dodge", stat="identity")
grid.arrange(plot1, plot2, plot3, ncol=3)
subset(erp, erp$Stimulus==2) == subset(erp, erp$Stimulus==3)
# visualize the data
data <- subset(erp, erp$Stimulus==1)
plot1 <- ggplot(data, aes(fill=Component, y=Value, x=Sex)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Low")
data <- subset(erp, erp$Stimulus==2)
plot2 <- ggplot(data, aes(fill=Component, y=Value, x=Sex)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Med")
data <- subset(erp, erp$Stimulus==3)
plot3 <- ggplot(data, aes(fill=Component, y=Value, x=Sex)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("High")
grid.arrange(plot1, plot2, plot3, ncol=3)
# visualize the data
data1 <- subset(erp, erp$Stimulus==1)
plot1 <- ggplot(data1, aes(fill=Component, y=Value, x=Sex)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Low")
data2 <- subset(erp, erp$Stimulus==2)
plot2 <- ggplot(data2, aes(fill=Component, y=Value, x=Sex)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Med")
data3 <- subset(erp, erp$Stimulus==3)
plot3 <- ggplot(data3, aes(fill=Component, y=Value, x=Sex)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("High")
grid.arrange(plot1, plot2, plot3, ncol=3)
mean(subset(erp, erp$Stimulus==3)$Value)
mean(subset(erp, erp$Stimulus==2)$Value)
mean(subset(erp, erp$Stimulus==1)$Value)
grepl("Lat", erp$Component, fixed = TRUE)
subset(erp, grepl("Lat", erp$Component, fixed = TRUE))
erp <- subset(erp, grepl("Lat", erp$Component, fixed = TRUE))
data1 <- subset(erp, erp$Stimulus==1)
plot1 <- ggplot(data1, aes(fill=Component, y=Value, x=Sex)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Low")
data2 <- subset(erp, erp$Stimulus==2)
plot2 <- ggplot(data2, aes(fill=Component, y=Value, x=Sex)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Med")
data3 <- subset(erp, erp$Stimulus==3)
plot3 <- ggplot(data3, aes(fill=Component, y=Value, x=Sex)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("High")
grid.arrange(plot1, plot2, plot3, ncol=3)
erp <- read_csv("erp.csv", col_types = cols(...1 = col_skip(),
Sex = col_factor(levels = c("male", "female")),
Stimulus = col_factor(levels = c("1", "2", "3"))))
erp <- na.omit(erp)
erp$Value <- abs(erp$Value)
# visualize the data
lats <- subset(erp, grepl("Lat", erp$Component, fixed = TRUE))
data1 <- subset(lats, lats$Stimulus==1)
plot1 <- ggplot(data1, aes(fill=Component, y=Value, x=Sex)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Low")
data2 <- subset(lats, lats$Stimulus==2)
plot2 <- ggplot(data2, aes(fill=Component, y=Value, x=Sex)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Med")
data3 <- subset(lats, lats$Stimulus==3)
plot3 <- ggplot(data3, aes(fill=Component, y=Value, x=Sex)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("High")
grid.arrange(plot1, plot2, plot3, ncol=3)
# Then amplitudes
amps <- subset(erp, grepl("Amp", erp$Component, fixed = TRUE))
data1 <- subset(amps, amps$Stimulus==1)
plot1 <- ggplot(data1, aes(fill=Component, y=Value, x=Sex)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Low")
data2 <- subset(amps, amps$Stimulus==2)
plot2 <- ggplot(data2, aes(fill=Component, y=Value, x=Sex)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Med")
data3 <- subset(amps, amps$Stimulus==3)
plot3 <- ggplot(data3, aes(fill=Component, y=Value, x=Sex)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("High")
grid.arrange(plot1, plot2, plot3, ncol=3)
View(erp)
N1_Lat <- subset(erp, erp$Component=="N1_Lat")
erp.model <- lmer(Value ~ Sex * Stimulus + (1|ID), data = N1_Lat, REML = TRUE)
anova(erp.model)
rand(erp.model)
post.hoc <- emmeans(erp.model, ~ Sex * Stimulus)
pairs(post.hoc, adjust = "tukey")
plot(N1_lat)
plot(N1_Lat)
ggplot(N1_Lat)
ggplot(N1_Lat, aes(fill=Stimulus, y=Value, x=Sex)) +
geom_bar(position="dodge", stat="identity")
min(N1_Lat$Value)
ggplot(N1_Lat, aes(fill=Stimulus, y=Value, x=Sex)) +
geom_bar(position="dodge", stat="identity") +
ylim(min(N1_Lat$Value), max(N1_Lat$Value))
ggplot(N1_Lat, aes(fill=Stimulus, y=Value, x=Sex)) +
geom_bar(position="dodge", stat="identity") +
ylim(min(N1_Lat$Value)-1, max(N1_Lat$Value)+1)
max(N1_Lat$Value)+1
min(N1_Lat$Value)-1
ggplot(N1_Lat, aes(fill=Stimulus, y=Value, x=Sex)) +
geom_bar(position="dodge", stat="identity") +
ylim(1, 1000)
ggplot(N1_Lat, aes(fill=Stimulus, y=Value, x=Sex)) +
geom_bar(position="dodge", stat="identity") +
ggplot(N1_Lat, aes(fill=Stimulus, y=Value, x=Sex)) +
geom_bar(position="dodge", stat="identity") +
eroro
ggplot(N1_Lat, aes(fill=Stimulus, y=Value, x=Sex)) +
geom_bar(position="dodge", stat="identity")
?abs
View(erp)
N1_Lat$Value
mean(subset(N1_Lat$Value, N1_Lat$Stimulus==1)
)
mean(subset(N1_Lat$Value, N1_Lat$Stimulus==1))
mean(subset(N1_Lat$Value, N1_Lat$Stimulus==2))
mean(subset(N1_Lat$Value, N1_Lat$Stimulus==3))
# N1 AMPLITUDE
N1_Amp <- subset(erp, erp$Component=="N1_Amp")
erp.model <- lmer(Value ~ Sex * Stimulus + (1|ID), data = N1_Amp, REML = TRUE)
anova(erp.model)
rand(erp.model)
post.hoc <- emmeans(erp.model, ~ Sex * Stimulus)
pairs(post.hoc, adjust = "tukey")
ggplot(N1_Amp, aes(fill=Stimulus, y=Value, x=Sex)) +
geom_bar(position="dodge", stat="identity")
ggboxplot(N1_Amp, x = "Sex", y = "Value",
color = "Stimulus", palette = c("#00AFBB", "#E7B800", "#A3Bf39"),
ylab = "Verbal Pain Rating", xlab = "Sex")
library(readxl)
library(ggpubr)
library(car)
library(lme4)
library(multcomp)
library(tidyverse)
library(rstatix)
library(lmerTest)
library(rcompanion)
library(emmeans)
library(readr)
library(ggplot2)
require(gridExtra)
ggboxplot(N1_Amp, x = "Sex", y = "Value",
color = "Stimulus", palette = c("#00AFBB", "#E7B800", "#A3Bf39"),
ylab = "Verbal Pain Rating", xlab = "Sex")
ggboxplot(N1_Amp, x = "Sex", y = "Value",
color = "Stimulus", palette = c("#00AFBB", "#E7B800", "#A3Bf39"),
ylab = "N1 Amplitude", xlab = "Sex")
ggboxplot(N1_Lat, x = "Sex", y = "Value",
color = "Stimulus", palette = c("#00AFBB", "#E7B800", "#A3Bf39"),
ylab = "N1 Latency", xlab = "Sex")
anova(erp.model)
test <- anova(erp.model)
test$`Pr(>F)`
test$`Pr(>F)` < 0.05
if (test$`Pr(>F)` < 0.05) {print("AH")}
model <- function(df, title) {
temp <- subset(erp, erp$Component==title)
erp.model <- lmer(Value ~ Sex * Stimulus + (1|ID), data = N1_Lat, REML = TRUE)
anova(erp.model)
rand(erp.model)
post.hoc <- emmeans(erp.model, ~ Sex * Stimulus)
pairs(post.hoc, adjust = "tukey")
ggboxplot(temp, x = "Sex", y = "Value",
color = "Stimulus", palette = c("#00AFBB", "#E7B800", "#A3Bf39"),
ylab = title, xlab = "Sex")
readline(prompt="Press [enter] to continue to next analysis...")
}
# N1 LATENCY
model(erp, "N1_Lat")
model <- function(df, title) {
temp <- subset(erp, erp$Component==title)
erp.model <- lmer(Value ~ Sex * Stimulus + (1|ID), data = N1_Lat, REML = TRUE)
print(anova(erp.model))
print(rand(erp.model))
post.hoc <- emmeans(erp.model, ~ Sex * Stimulus)
print(pairs(post.hoc, adjust = "tukey"))
ggboxplot(temp, x = "Sex", y = "Value",
color = "Stimulus", palette = c("#00AFBB", "#E7B800", "#A3Bf39"),
ylab = title, xlab = "Sex")
}
# N1 LATENCY
model(erp, "N1_Lat")
model <- function(df, title) {
temp <- subset(erp, erp$Component==title)
erp.model <- lmer(Value ~ Sex * Stimulus + (1|ID), data = N1_Lat, REML = TRUE)
print(anova(erp.model))
print(rand(erp.model))
post.hoc <- emmeans(erp.model, ~ Sex * Stimulus)
print(pairs(post.hoc, adjust = "tukey"))
ggboxplot(temp, x = "Sex", y = "Value",
color = "Stimulus", palette = c("#00AFBB", "#E7B800", "#A3Bf39"),
ylab = title, xlab = "Sex")
R = residuals(erp.model)
qqnorm(R)
qqline(R)
ggqqplot(R)
ggqqplot(temp, "Values", facet.by = "Sex")
}
# N1 LATENCY
model(erp, "N1_Lat")
model <- function(df, title) {
temp <- subset(erp, erp$Component==title)
erp.model <- lmer(Value ~ Sex * Stimulus + (1|ID), data = N1_Lat, REML = TRUE)
print(anova(erp.model))
print(rand(erp.model))
post.hoc <- emmeans(erp.model, ~ Sex * Stimulus)
print(pairs(post.hoc, adjust = "tukey"))
attach(mtcars)
par(mfrow=c(1,2))
ggboxplot(temp, x = "Sex", y = "Value",
color = "Stimulus", palette = c("#00AFBB", "#E7B800", "#A3Bf39"),
ylab = title, xlab = "Sex")
R = residuals(erp.model)
qqnorm(R)
qqline(R)
ggqqplot(R)
}
# N1 LATENCY
model(erp, "N1_Lat")
model <- function(df, title) {
temp <- subset(erp, erp$Component==title)
erp.model <- lmer(Value ~ Sex * Stimulus + (1|ID), data = N1_Lat, REML = TRUE)
print(anova(erp.model))
print(rand(erp.model))
post.hoc <- emmeans(erp.model, ~ Sex * Stimulus)
print(pairs(post.hoc, adjust = "tukey"))
attach(mtcars)
par(mfrow=c(2,1))
ggboxplot(temp, x = "Sex", y = "Value",
color = "Stimulus", palette = c("#00AFBB", "#E7B800", "#A3Bf39"),
ylab = title, xlab = "Sex")
R = residuals(erp.model)
qqnorm(R)
qqline(R)
ggqqplot(R)
}
# N1 LATENCY
model(erp, "N1_Lat")
model <- function(df, title) {
temp <- subset(erp, erp$Component==title)
erp.model <- lmer(Value ~ Sex * Stimulus + (1|ID), data = N1_Lat, REML = TRUE)
print(anova(erp.model))
print(rand(erp.model))
post.hoc <- emmeans(erp.model, ~ Sex * Stimulus)
print(pairs(post.hoc, adjust = "tukey"))
attach(mtcars)
ggboxplot(temp, x = "Sex", y = "Value",
color = "Stimulus", palette = c("#00AFBB", "#E7B800", "#A3Bf39"),
ylab = title, xlab = "Sex")
R = residuals(erp.model)
qqnorm(R)
qqline(R)
ggqqplot(R)
}
# N1 LATENCY
model(erp, "N1_Lat")
model <- function(df, title) {
temp <- subset(erp, erp$Component==title)
erp.model <- lmer(Value ~ Sex * Stimulus + (1|ID), data = N1_Lat, REML = TRUE)
print(anova(erp.model))
print(rand(erp.model))
post.hoc <- emmeans(erp.model, ~ Sex * Stimulus)
print(pairs(post.hoc, adjust = "tukey"))
ggboxplot(temp, x = "Sex", y = "Value",
color = "Stimulus", palette = c("#00AFBB", "#E7B800", "#A3Bf39"),
ylab = title, xlab = "Sex")
R = residuals(erp.model)
qqnorm(R)
qqline(R)
ggqqplot(R)
}
# N1 LATENCY
model(erp, "N1_Lat")
model <- function(df, title) {
temp <- subset(erp, erp$Component==title)
erp.model <- lmer(Value ~ Sex * Stimulus + (1|ID), data = N1_Lat, REML = TRUE)
print(anova(erp.model))
print(rand(erp.model))
post.hoc <- emmeans(erp.model, ~ Sex * Stimulus)
print(pairs(post.hoc, adjust = "tukey"))
ggboxplot(temp, x = "Sex", y = "Value",
color = "Stimulus", palette = c("#00AFBB", "#E7B800", "#A3Bf39"),
ylab = title, xlab = "Sex")
R = residuals(erp.model)
qqnorm(R)
qqline(R)
ggqqplot(R)
}
# N1 LATENCY
model(erp, "N1_Lat")
model <- function(df, title) {
temp <- subset(erp, erp$Component==title)
erp.model <- lmer(Value ~ Sex * Stimulus + (1|ID), data = N1_Lat, REML = TRUE)
print(anova(erp.model))
print(rand(erp.model))
post.hoc <- emmeans(erp.model, ~ Sex * Stimulus)
print(pairs(post.hoc, adjust = "tukey"))
ggboxplot(temp, x = "Sex", y = "Value",
color = "Stimulus", palette = c("#00AFBB", "#E7B800", "#A3Bf39"),
ylab = title, xlab = "Sex")
R = residuals(erp.model)
ggqqplot(R)
}
# N1 LATENCY
model(erp, "N1_Lat")
# Load and clean data
erp <- read_csv("erp.csv", col_types = cols(...1 = col_skip(),
Sex = col_factor(levels = c("male", "female")),
Stimulus = col_factor(levels = c("1", "2", "3"))))
erp <- na.omit(erp)
erp$Value <- abs(erp$Value)
# model ERP component as a factor of Sex, controlling for Stim level and with
# Subject as a random effect (since we have subject-specific pain thresholds)
model <- function(df, title) {
temp <- subset(erp, erp$Component==title)
erp.model <- lmer(Value ~ Sex * Stimulus + (1|ID), data = N1_Lat, REML = TRUE)
print(anova(erp.model))
print(rand(erp.model))
post.hoc <- emmeans(erp.model, ~ Sex * Stimulus)
print(pairs(post.hoc, adjust = "tukey"))
ggboxplot(temp, x = "Sex", y = "Value",
color = "Stimulus", palette = c("#00AFBB", "#E7B800", "#A3Bf39"),
ylab = title, xlab = "Sex")
R = residuals(erp.model)
ggqqplot(R)
}
# N1 LATENCY
model(erp, "N1_Lat")
erp <- read_csv("erp.csv", col_types = cols(...1 = col_skip(),
Sex = col_factor(levels = c("male", "female")),
Stimulus = col_factor(levels = c("1", "2", "3"))))
erp <- na.omit(erp)
erp$Value <- abs(erp$Value)
# model ERP component as a factor of Sex, controlling for Stim level and with
# Subject as a random effect (since we have subject-specific pain thresholds)
model <- function(df, title) {
temp <- subset(erp, erp$Component==title)
erp.model <- lmer(Value ~ Sex * Stimulus + (1|ID), data = temp, REML = TRUE)
print(anova(erp.model))
print(rand(erp.model))
post.hoc <- emmeans(erp.model, ~ Sex * Stimulus)
print(pairs(post.hoc, adjust = "tukey"))
ggboxplot(temp, x = "Sex", y = "Value",
color = "Stimulus", palette = c("#00AFBB", "#E7B800", "#A3Bf39"),
ylab = title, xlab = "Sex")
R = residuals(erp.model)
ggqqplot(R)
}
# N1 LATENCY
model(erp, "N1_Lat")
ggboxplot(temp, x = "Sex", y = "Value",
color = "Stimulus", palette = c("#00AFBB", "#E7B800", "#A3Bf39"),
ylab = title, xlab = "Sex")
model <- function(df, title) {
temp <- subset(erp, erp$Component==title)
erp.model <- lmer(Value ~ Sex * Stimulus + (1|ID), data = temp, REML = TRUE)
print(anova(erp.model))
print(rand(erp.model))
post.hoc <- emmeans(erp.model, ~ Sex * Stimulus)
print(pairs(post.hoc, adjust = "tukey"))
R = residuals(erp.model)
ggqqplot(R)
ggboxplot(temp, x = "Sex", y = "Value",
color = "Stimulus", palette = c("#00AFBB", "#E7B800", "#A3Bf39"),
ylab = title, xlab = "Sex")
}
# N1 LATENCY
model(erp, "N1_Lat")
# Load and clean data
erp <- read_csv("erp.csv", col_types = cols(...1 = col_skip(),
Sex = col_factor(levels = c("male", "female")),
Stimulus = col_factor(levels = c("1", "2", "3"))))
erp <- na.omit(erp)
erp$Value <- abs(erp$Value)
# model ERP component as a factor of Sex, controlling for Stim level and with
# Subject as a random effect (since we have subject-specific pain thresholds)
model <- function(df, title) {
temp <- subset(erp, erp$Component==title)
erp.model <- lmer(Value ~ Sex * Stimulus + (1|ID), data = temp, REML = TRUE)
print(anova(erp.model))
print(rand(erp.model))
post.hoc <- emmeans(erp.model, ~ Sex * Stimulus)
print(pairs(post.hoc, adjust = "tukey"))
R = residuals(erp.model)
ggqqplot(R)
ggboxplot(temp, x = "Sex", y = "Value",
color = "Stimulus", palette = c("#00AFBB", "#E7B800", "#A3Bf39"),
ylab = title, xlab = "Sex")
}
# N1 LATENCY
model(erp, "N1_Lat")
model <- function(df, title) {
temp <- subset(erp, erp$Component==title)
erp.model <- lmer(Value ~ Sex * Stimulus + (1|ID), data = temp, REML = TRUE)
print(anova(erp.model))
print(rand(erp.model))
post.hoc <- emmeans(erp.model, ~ Sex * Stimulus)
print(pairs(post.hoc, adjust = "tukey"))
R = residuals(erp.model)
p1 <- ggqqplot(R)
p2 <- ggboxplot(temp, x = "Sex", y = "Value",
color = "Stimulus", palette = c("#00AFBB", "#E7B800", "#A3Bf39"),
ylab = title, xlab = "Sex")
grid.arrange(p1, p2)
}
# N1 LATENCY
model(erp, "N1_Lat")
# N2 AMPLITUDE
model(erp, "N2_Amp")
?compare_means
model <- function(df, title) {
temp <- subset(erp, erp$Component==title)
erp.model <- lmer(Value ~ Sex * Stimulus + (1|ID), data = temp, REML = TRUE)
print(anova(erp.model))
print(rand(erp.model))
post.hoc <- emmeans(erp.model, ~ Sex * Stimulus)
print(pairs(post.hoc, adjust = "tukey"))
compare_means(Value ~ Sex * Stimulus, data = temp, method = "anova")
R = residuals(erp.model)
p1 <- ggqqplot(R)
p2 <- ggboxplot(temp, x = "Sex", y = "Value",
color = "Stimulus", palette = c("#00AFBB", "#E7B800", "#A3Bf39"),
ylab = title, xlab = "Sex") + stat_compare_means(method = "anova")
grid.arrange(p1, p2)
}
# N1 LATENCY
model(erp, "N1_Lat")
p2 <- ggboxplot(temp, x = "Sex", y = "Value",
color = "Stimulus", palette = c("#00AFBB", "#E7B800", "#A3Bf39"),
ylab = title, xlab = "Sex") + stat_compare_means(method = "anova")
model <- function(df, title) {
temp <- subset(erp, erp$Component==title)
erp.model <- lmer(Value ~ Sex * Stimulus + (1|ID), data = temp, REML = TRUE)
print(anova(erp.model))
print(rand(erp.model))
post.hoc <- emmeans(erp.model, ~ Sex * Stimulus)
print(pairs(post.hoc, adjust = "tukey"))
compare_means(Value ~ Sex * Stimulus, data = temp, method = "anova")
R = residuals(erp.model)
p1 <- ggqqplot(R)
p2 <- ggboxplot(temp, x = "Sex", y = "Value",
color = "Stimulus", palette = c("#00AFBB", "#E7B800", "#A3Bf39"),
ylab = title, xlab = "Sex") + stat_compare_means(method = "anova")
grid.arrange(p1, p2)
}
# N1 LATENCY
model(erp, "N1_Lat")
model <- function(df, title) {
temp <- subset(erp, erp$Component==title)
erp.model <- lmer(Value ~ Sex * Stimulus + (1|ID), data = temp, REML = TRUE)
print(anova(erp.model))
print(rand(erp.model))
post.hoc <- emmeans(erp.model, ~ Sex * Stimulus)
print(pairs(post.hoc, adjust = "tukey"))
R = residuals(erp.model)
p1 <- ggqqplot(R)
p2 <- ggboxplot(temp, x = "Sex", y = "Value",
color = "Stimulus", palette = c("#00AFBB", "#E7B800", "#A3Bf39"),
ylab = title, xlab = "Sex")
grid.arrange(p1, p2)
}
# N2 LATENCY
model(erp, "N2_Lat")
# N1 LATENCY
model(erp, "N1_Lat")
# N1 AMPLITUDE
model(erp, "N1_Amp")
# N2 LATENCY
model(erp, "N2_Lat")
# N2 AMPLITUDE
model(erp, "N2_Amp")
# P2 LATENCY
model(erp, "P2_Lat")
# P2 AMPLITUDE
model(erp, "P2_Amp")
